type Comment {
    id : ID!,
    body: String,
    username: String,
    createdAt: String
}

type Like {
    id : ID!,
    username: String,
    createdAt: String
}

type Post {
    id: ID!,
    body: String!,
    createdAt: String!,
    username: String!,
    comments: [Comment]!,
    likes: [Like]!
}

input RegisterInput {
    email: String!,
    username: String!
    password: String!
    confirmPassword: String!
}

input  LoginInput {
    username: String!,
    password: String!
}

type User {
    id: String!,
    email: String!,
    token: String!,
    username: String!
    createdAt: String!
}

type Query {
    getPosts: [Post],
    getPost(postId : ID!): Post
}

type Mutation {
    register(registerInput: RegisterInput): User!,
    login(loginInput: LoginInput) : User!,
    createPost(body: String!) : Post!,
    deletePost(postId: String!): String!,
    createComment(postId: String! , body: String!): Post!,
    deleteComment(postId: String! , commentId: String!): Post!,
    likePost(postId: String!): Post!,
    unLikePost(postId: String!): Post!,
}

type Subscription {
    newPost: Post!
}

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}
